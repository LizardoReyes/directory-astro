---
import {getSiteInfo} from "../libs/csv";
import {getTranslations} from "../i18n";

const { language } = getSiteInfo();
const t = getTranslations(language);

const {
  currentPage,
  totalPages,
  basePath = "/page", // puede ser "/page" o "/categoria/page"
} = Astro.props;

if (totalPages <= 1) return null;

// Función que genera la URL para una página dada
const getPageUrl = (n: number) => {
  if (n === 1) {
    // Si es la página 1
    return basePath === "/page"
        ? "/" // Home
        : basePath.replace(/\/page$/, ""); // Categoría
  }
  return `${basePath}/${n}`;
};

// Control de botones visibles
const maxButtons = 5;
let start = Math.max(1, currentPage - Math.floor(maxButtons / 2));
let end = Math.min(totalPages, start + maxButtons - 1);
if (end - start < maxButtons - 1) start = Math.max(1, end - maxButtons + 1);

// Generar array de páginas
const pages = [];
for (let i = start; i <= end; i++) pages.push(i);
---

<!-- Pagination -->
<div class="flex justify-center mt-10 space-x-2 text-sm text-gray-800 flex-wrap">
  <!-- Botón Anterior -->
  {currentPage > 1 ? (
      <a href={getPageUrl(currentPage - 1)}>
        <button class="px-3 py-1 text-[var(--color-primary-hover)] cursor-pointer hover:underline transition-colors">
          {t.PREVIOUS_TEXT}
        </button>
      </a>
  ) : (
      <button class="px-3 py-1 text-gray-400 cursor-not-allowed" disabled>
        {t.PREVIOUS_TEXT}
      </button>
  )}

  <!-- Botones numerados con ... -->
  {start > 1 && (
      <>
        <a href={getPageUrl(1)}>
          <button class="px-3 py-1 border border-[var(--color-header-bg)] text-[var(--color-header-bg)] rounded bg-white hover:bg-[var(--color-primary-hover)]/10 transition-colors cursor-pointer">
            1
          </button>
        </a>
        {start > 2 && <span class="px-3 py-1">…</span>}
      </>
  )}

  {pages.map((page) => (
      <a href={getPageUrl(page)}>
        <button
            class={`px-3 py-1 border border-[var(--color-header-bg)] rounded cursor-pointer transition-colors duration-150 ${
                page === currentPage
                    ? "bg-[var(--color-header-bg)] text-[var(--color-header-text)] font-semibold ring-2 ring-[var(--color-primary-hover)]"
                    : "bg-white hover:bg-[var(--color-primary-hover)]/10 text-[var(--color-header-bg)]"
            }`}
        >
          {page}
        </button>
      </a>
  ))}

  {end < totalPages && (
      <>
        {end < totalPages - 1 && <span class="px-3 py-1">…</span>}
        <a href={getPageUrl(totalPages)}>
          <button class="px-3 py-1 border border-[var(--color-header-bg)] text-[var(--color-header-bg)] rounded bg-white hover:bg-[var(--color-primary-hover)]/10 transition-colors cursor-pointer">
            {totalPages}
          </button>
        </a>
      </>
  )}

  <!-- Botón Siguiente -->
  {currentPage < totalPages ? (
      <a href={getPageUrl(currentPage + 1)}>
        <button class="px-3 py-1 text-[var(--color-primary-hover)] hover:underline cursor-pointer transition-colors">
          {t.NEXT_TEXT}
        </button>
      </a>
  ) : (
      <button class="px-3 py-1 text-gray-400 cursor-not-allowed" disabled>
        {t.NEXT_TEXT}
      </button>
  )}
</div>

