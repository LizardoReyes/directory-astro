---
import { getAllItems, getItemBySlug, getSiteInfo } from "../libs/csv";
import { createSlug } from "../libs/global";
import { type PostType } from "../types/PostType";
import { type PageType } from "../types/PageType";
import { type CategoryType } from "../types/CategoryType";

import Post from "../components/Post.astro";
import Page from "../components/Page.astro";
import Category from "../components/Category.astro";
import { categoriesFilePath, pagesFilePath, postsFilePath } from "../libs/constants";

const { slug } = Astro.params;

// Verificamos si existe el POST
const post = getItemBySlug<PostType>(postsFilePath, slug);

// Verificamos si existe la página
const page = getItemBySlug<PageType>(pagesFilePath, slug);

// Verificamos si existe la categoría
const category = getItemBySlug<CategoryType>(categoriesFilePath, slug);

// Verificamos si existe el post, página o categoría
if (!post && !page && !category) {
  throw new Error("404");
}

// Si es categoría, preparamos posts paginados (página 1)
let paginatedPosts: PostType[] = [];
let totalPages = 1;

if (category) {
  const { postPerPage } = getSiteInfo();

  const allPosts = getAllItems<PostType>(postsFilePath);

  const filteredPosts = allPosts.filter(
    (post) => post.category_id === category.id
  );

  totalPages = Math.ceil(filteredPosts.length / postPerPage);

  // Mostramos solo la primera página aquí (page 1)
  paginatedPosts = filteredPosts.slice(0, postPerPage);
}

export async function getStaticPaths() {
  const posts = getAllItems<PostType>(postsFilePath).map((post) => ({
    params: { slug: createSlug(post.title || post.slug) },
  }));

  const pages = getAllItems<PageType>(pagesFilePath).map((page) => ({
    params: { slug: createSlug(page.title || page.slug) },
  }));

  const categories = getAllItems<CategoryType>(categoriesFilePath).map(
    (category) => ({
      params: {
        slug: createSlug(category.title || category.slug),
      },
    })
  );

  return [...posts, ...pages, ...categories];
}
---

{post && <Post post={post} />}
{page && <Page page={page} />}
{category && (
  <Category
    category={category}
    posts={paginatedPosts}
    currentPage={1}
    totalPages={totalPages}
    basePath={`/${category.slug}/page`}
  />
)}
